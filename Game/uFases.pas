unit uFases;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, System.Generics.Collections,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects, FMX.Controls.Presentation, FMX.StdCtrls,
  FMX.Ani, FMX.Layouts, FMX.InertialMovement, FMX.ExtCtrls, FMX.Media,

  System.Json.Types,
  System.Json.Readers,
  System.Json,

  uBlocos,
  uItens;

Type

   TFases = Class(TObject)
      Private
         Class Var FFases : TStringList;
      Public
         Class Constructor CreateClass;
         Class Function  AddFase(aJsonFase : String) : Integer;
         Class Function QtdFases : Integer;
         Class Procedure MontaFase(aFase : Integer);
      End;

implementation

{ TFases }

Class constructor TFases.CreateClass;

{
 1 - BlocoAzul                 0 - tiSemItem
 2 - BlocoVermelho             1 - tiMaisVida
 3 - BlocoVerde                2 - tiGrande
 4 - BlocoAmarelo              3 - TiPequeno
 5 - BlocoLaranja              4 - tiCampoForca
 6 - BlocoBranco               5 - tiMaisBolas
 7 - JoiaAzul                  6 - tiTiro
 8 - JoiaVermelha              7 - tiTiraVida
 9 - JoiaVerde                 8 - tiSuperBola
10 - JoiaAmarela
11 - JoiaLaranja
12 - JoiaBranca
13 - EspecialRoxo
14 - EspecialAzul
15 - EspecialVermelho
16 - EspecialRosa
17 - EspecialCinza
}

begin
FFases := TStringList.Create;
AddFase ('{"blocos":[[0,  0, 1, 1,17, 0], [1,  0, 1, 1, 1, 0], [2,  0, 1, 1, 1, 0], [3,  0, 1, 1, 0, 0], [4,  0, 1, 1, 0, 0], [5,  0, 1, 1, 0, 0], [6,  0, 1, 1,17, 0],'+
                    '[0,  1, 1, 1,17, 0], [1,  1, 1, 1, 1, 0], [2,  1, 1, 1, 0, 0], [3,  1, 1, 1, 1, 0], [4,  1, 1, 1, 0, 0], [5,  1, 1, 1, 0, 0], [6,  1, 1, 1,17, 0],'+
                    '[0,  2, 1, 1,17, 0], [1,  2, 1, 1, 1, 0], [2,  2, 1, 1, 0, 0], [3,  2, 1, 1, 1, 0], [4,  2, 1, 1, 0, 0], [5,  2, 1, 1, 0, 0], [6,  2, 1, 1,17, 0],'+
                    '[0,  3, 1, 1,17, 0], [1,  3, 1, 1, 1, 0], [2,  3, 1, 1, 0, 0], [3,  3, 1, 1, 1, 0], [4,  3, 1, 1, 0, 0], [5,  3, 1, 1, 0, 0], [6,  3, 1, 1,17, 0],'+
                    '[0,  4, 1, 1,17, 0], [1,  4, 1, 1, 1, 0], [2,  4, 1, 1, 0, 0], [3,  4, 1, 1, 1, 0], [4,  4, 1, 1, 0, 0], [5,  4, 1, 1, 0, 0], [6,  4, 1, 1,17, 0],'+
                    '[0,  5, 1, 1,17, 0], [1,  5, 1, 1, 1, 0], [2,  5, 1, 1, 0, 0], [3,  5, 1, 1, 1, 0], [4,  5, 1, 1, 0, 0], [5,  5, 1, 1, 0, 0], [6,  5, 1, 1,17, 0],'+
                    '[0,  6, 1, 1,17, 0], [1,  6, 1, 1, 1, 0], [2,  6, 1, 1, 1, 0], [3,  6, 1, 1, 2, 0], [4,  6, 1, 1, 0, 0], [5,  6, 1, 1, 2, 0], [6,  6, 1, 1,17, 0],'+
                    '[0,  7, 1, 1,17, 0], [1,  7, 1, 1, 0, 0], [2,  7, 1, 1, 0, 0], [3,  7, 1, 1, 2, 0], [4,  7, 1, 1, 0, 0], [5,  7, 1, 1, 2, 0], [6,  7, 1, 1,17, 0],'+
                    '[0,  8, 1, 1,17, 0], [1,  8, 1, 1, 0, 0], [2,  8, 1, 1, 0, 0], [3,  8, 1, 1, 0, 0], [4,  8, 1, 1, 2, 0], [5,  8, 1, 1, 0, 0], [6,  8, 1, 1,17, 0],'+
                    '[0,  9, 1, 1,17, 0], [1,  9, 1, 1, 0, 0], [2,  9, 1, 1, 0, 0], [3,  9, 1, 1, 0, 0], [4,  9, 1, 1, 2, 0], [5,  9, 1, 1, 0, 0], [6,  9, 1, 1,17, 0],'+
                    '[0, 10, 1, 1,17, 0], [1, 10, 1, 1, 0, 0], [2, 10, 1, 1, 0, 0], [3, 10, 1, 1, 2, 0], [4, 10, 1, 1, 0, 0], [5, 10, 1, 1, 2, 0], [6, 10, 1, 1,17, 0],'+
                    '[0, 11, 1, 1,17, 0], [1, 11, 1, 1, 0, 0], [2, 11, 1, 1, 0, 0], [3, 11, 1, 1, 2, 6], [4, 11, 1, 1, 0, 0], [5, 11, 1, 1, 2, 0], [6, 11, 1, 1,17, 0]'+
                    ']}');
AddFase ('{"blocos":[[0,  0, 1, 1, 0, 0], [1,  0, 1, 1, 0, 0], [2,  0, 1, 1, 0, 0], [3,  0, 1, 1, 0, 0], [4,  0, 1, 1, 0, 0], [5,  0, 1, 1, 0, 0], [6,  0, 1, 1, 0, 0],'+
                    '[0,  1, 1, 1, 0, 0], [1,  1, 1, 1, 2, 0], [2,  1, 1, 1, 2, 0], [3,  1, 1, 1, 0, 0], [4,  1, 1, 1, 2, 0], [5,  1, 1, 1, 2, 0], [6,  1, 1, 1, 0, 0],'+
                    '[0,  2, 1, 1, 2, 0], [1,  2, 1, 1, 2, 0], [2,  2, 1, 1, 2, 0], [3,  2, 1, 1, 2, 0], [4,  2, 1, 1, 2, 0], [5,  2, 1, 1, 2, 0], [6,  2, 1, 1, 2, 0],'+
                    '[0,  3, 1, 1, 2, 0], [1,  3, 1, 1, 2, 0], [2,  3, 1, 1, 2, 0], [3,  3, 1, 1, 4, 0], [4,  3, 1, 1, 2, 0], [5,  3, 1, 1, 2, 0], [6,  3, 1, 1, 2, 0],'+
                    '[0,  4, 1, 1, 2, 0], [1,  4, 1, 1, 2, 0], [2,  4, 1, 1, 4, 0], [3,  4, 1, 1, 2, 0], [4,  4, 1, 1, 4, 0], [5,  4, 1, 1, 2, 0], [6,  4, 1, 1, 2, 0],'+
                    '[0,  5, 1, 1, 2, 0], [1,  5, 1, 1, 2, 0], [2,  5, 1, 1, 4, 0], [3,  5, 1, 1, 4, 0], [4,  5, 1, 1, 4, 0], [5,  5, 1, 1, 2, 0], [6,  5, 1, 1, 2, 0],'+
                    '[0,  6, 1, 1, 0, 0], [1,  6, 1, 1, 2, 0], [2,  6, 1, 1, 4, 0], [3,  6, 1, 1, 2, 0], [4,  6, 1, 1, 2, 0], [5,  6, 1, 1, 2, 0], [6,  6, 1, 1, 0, 0],'+
                    '[0,  7, 1, 1, 0, 0], [1,  7, 1, 1, 2, 0], [2,  7, 1, 1, 4, 0], [3,  7, 1, 1, 2, 0], [4,  7, 1, 1, 4, 0], [5,  7, 1, 1, 2, 0], [6,  7, 1, 1, 0, 0],'+
                    '[0,  8, 1, 1, 0, 0], [1,  8, 1, 1, 0, 0], [2,  8, 1, 1, 2, 0], [3,  8, 1, 1, 4, 0], [4,  8, 1, 1, 2, 0], [5,  8, 1, 1, 0, 0], [6,  8, 1, 1, 0, 0],'+
                    '[0,  9, 1, 1, 0, 0], [1,  9, 1, 1, 0, 0], [2,  9, 1, 1, 2, 0], [3,  9, 1, 1, 2, 0], [4,  9, 1, 1, 2, 0], [5,  9, 1, 1, 0, 0], [6,  9, 1, 1, 0, 0],'+
                    '[0, 10, 1, 1, 0, 0], [1, 10, 1, 1, 0, 0], [2, 10, 1, 1, 0, 0], [3, 10, 1, 1, 2, 0], [4, 10, 1, 1, 0, 0], [5, 10, 1, 1, 0, 0], [6, 10, 1, 1, 0, 0],'+
                    '[0, 11, 1, 1, 0, 0], [1, 11, 1, 1, 0, 0], [2, 11, 1, 1, 0, 0], [3, 11, 1, 1, 2, 0], [4, 11, 1, 1, 0, 0], [5, 11, 1, 1, 0, 0], [6, 11, 1, 1, 0, 0]'+
                    ']}');
AddFase ('{"blocos":[[0,  0, 3, 1,17, 0], [1,  0, 3, 1,17, 0], [2,  0, 3, 1,17, 0], [3,  0, 1, 3, 0, 0], [4,  0, 3, 1,17, 0], [5,  0, 3, 1,17, 0], [6,  0, 3, 1,17, 0],'+
                    '[0,  1, 3, 1,17, 0], [1,  1, 1, 1, 1, 0], [2,  1, 1, 1,10, 0], [3,  1, 1, 1, 9, 0], [4,  1, 1, 1, 8, 0], [5,  1, 1, 1, 7, 0], [6,  1, 3, 1,17, 0],'+
                    '[0,  2, 3, 1,17, 0], [1,  2, 1, 1, 2, 0], [2,  2, 1, 1, 1, 0], [3,  2, 1, 1,10, 0], [4,  2, 1, 1, 9, 0], [5,  2, 1, 1, 8, 0], [6,  2, 3, 1,17, 0],'+
                    '[0,  3, 3, 1,17, 0], [1,  3, 1, 1, 3, 0], [2,  3, 1, 1, 2, 0], [3,  3, 1, 1, 1, 0], [4,  3, 1, 1,10, 0], [5,  3, 1, 1, 9, 0], [6,  3, 3, 1,17, 0],'+
                    '[0,  4, 3, 1,17, 0], [1,  4, 1, 1, 4, 1], [2,  4, 1, 1, 3, 0], [3,  4, 1, 1, 2, 0], [4,  4, 1, 1, 1, 0], [5,  4, 1, 1,10, 0], [6,  4, 1, 1,17, 0],'+
                    '[0,  5, 3, 1,17, 0], [1,  5, 1, 1, 5, 0], [2,  5, 1, 1, 4, 0], [3,  5, 1, 1, 3, 0], [4,  5, 1, 1, 2, 0], [5,  5, 1, 1, 1, 0], [6,  5, 1, 1,17, 0],'+
                    '[0,  6, 3, 1,17, 0], [1,  6, 1, 1, 6, 0], [2,  6, 1, 1, 5, 0], [3,  6, 1, 1, 4, 0], [4,  6, 1, 1, 3, 0], [5,  6, 1, 1, 2, 0], [6,  6, 1, 1,17, 0],'+
                    '[0,  7, 3, 1,17, 0], [1,  7, 1, 1, 7, 0], [2,  7, 1, 1, 6, 0], [3,  7, 1, 1, 5, 0], [4,  7, 1, 1, 4, 0], [5,  7, 1, 1, 3, 0], [6,  7, 3, 1,17, 0],'+
                    '[0,  8, 3, 1,17, 0], [1,  8, 1, 1, 8, 0], [2,  8, 1, 1, 7, 0], [3,  8, 1, 1, 6, 0], [4,  8, 1, 1, 5, 4], [5,  8, 1, 1, 4, 0], [6,  8, 3, 1,17, 0],'+
                    '[0,  9, 3, 1,17, 0], [1,  9, 1, 1, 9, 0], [2,  9, 1, 1, 8, 0], [3,  9, 1, 1, 7, 0], [4,  9, 1, 1, 6, 0], [5,  9, 1, 1, 5, 0], [6,  9, 3, 1,17, 0],'+
                    '[0, 10, 3, 1,17, 0], [1, 10, 1, 1,10, 0], [2, 10, 1, 1, 9, 0], [3, 10, 1, 1, 8, 0], [4, 10, 1, 1, 7, 0], [5, 10, 1, 1, 6, 0], [6, 10, 3, 1,17, 0],'+
                    '[0, 11, 3, 1,17, 0], [1, 11, 3, 1,17, 6], [2, 11, 3, 1,17, 0], [3, 11, 3, 1,17, 0], [4, 11, 3, 1,17, 0], [5, 11, 3, 1,17, 0], [6, 11, 3, 1,17, 8]'+
                    ']}');
(*
AddFase ('{"blocos":[[0,  0, 1, 1, 0, 0], [1,  0, 1, 1, 0, 0], [2,  0, 1, 1, 0, 0], [3,  0, 1, 1, 0, 0], [4,  0, 1, 1, 0, 0], [5,  0, 1, 1, 0, 0], [6,  0, 1, 1, 0, 0],'+
                    '[0,  1, 1, 1, 0, 0], [1,  1, 1, 1, 0, 0], [2,  1, 1, 1, 0, 0], [3,  1, 1, 1, 0, 0], [4,  1, 1, 1, 0, 0], [5,  1, 1, 1, 0, 0], [6,  1, 1, 1, 0, 0],'+
                    '[0,  2, 1, 1, 0, 0], [1,  2, 1, 1, 0, 0], [2,  2, 1, 1, 0, 0], [3,  2, 1, 1, 0, 0], [4,  2, 1, 1, 0, 0], [5,  2, 1, 1, 0, 0], [6,  2, 1, 1, 0, 0],'+
                    '[0,  3, 1, 1, 0, 0], [1,  3, 1, 1, 0, 0], [2,  3, 1, 1, 0, 0], [3,  3, 1, 1, 0, 0], [4,  3, 1, 1, 0, 0], [5,  3, 1, 1, 0, 0], [6,  3, 1, 1, 0, 0],'+
                    '[0,  4, 1, 1, 0, 0], [1,  4, 1, 1, 0, 0], [2,  4, 1, 1, 0, 0], [3,  4, 1, 1, 0, 0], [4,  4, 1, 1, 0, 0], [5,  4, 1, 1, 0, 0], [6,  4, 1, 1, 0, 0],'+
                    '[0,  5, 1, 1, 0, 0], [1,  5, 1, 1, 0, 0], [2,  5, 1, 1, 0, 0], [3,  5, 1, 1, 0, 0], [4,  5, 1, 1, 0, 0], [5,  5, 1, 1, 0, 0], [6,  5, 1, 1, 0, 0],'+
                    '[0,  6, 1, 1, 0, 0], [1,  6, 1, 1, 0, 0], [2,  6, 1, 1, 0, 0], [3,  6, 1, 1, 0, 0], [4,  6, 1, 1, 0, 0], [5,  6, 1, 1, 0, 0], [6,  6, 1, 1, 0, 0],'+
                    '[0,  7, 1, 1, 0, 0], [1,  7, 1, 1, 0, 0], [2,  7, 1, 1, 0, 0], [3,  7, 1, 1, 0, 0], [4,  7, 1, 1, 0, 0], [5,  7, 1, 1, 0, 0], [6,  7, 1, 1, 0, 0],'+
                    '[0,  8, 1, 1, 0, 0], [1,  8, 1, 1, 0, 0], [2,  8, 1, 1, 0, 0], [3,  8, 1, 1, 0, 0], [4,  8, 1, 1, 0, 0], [5,  8, 1, 1, 0, 0], [6,  8, 1, 1, 0, 0],'+
                    '[0,  9, 1, 1, 0, 0], [1,  9, 1, 1, 0, 0], [2,  9, 1, 1, 0, 0], [3,  9, 1, 1, 0, 0], [4,  9, 1, 1, 0, 0], [5,  9, 1, 1, 0, 0], [6,  9, 1, 1, 0, 0],'+
                    '[0, 10, 1, 1, 0, 0], [1, 10, 1, 1, 0, 0], [2, 10, 1, 1, 0, 0], [3, 10, 1, 1, 0, 0], [4, 10, 1, 1, 0, 0], [5, 10, 1, 1, 0, 0], [6, 10, 1, 1, 0, 0],'+
                    '[0, 11, 1, 1, 0, 0], [1, 11, 1, 1, 0, 0], [2, 11, 1, 1, 0, 0], [3, 11, 1, 1, 0, 0], [4, 11, 1, 1, 0, 0], [5, 11, 1, 1, 0, 0], [6, 11, 1, 1, 0, 0]'+
                    ']}');
*)

end;

Class function TFases.AddFase(aJsonFase: String): Integer;
begin
Result := FFases.Add(aJsonFase);
end;

Class procedure TFases.MontaFase(aFase: Integer);
Var
   Json    : TJsonObject;
   JValue  : TJsonValue;
   JBloco  : TJsonArray;
   JBlocos : TJsonArray;
   X, Y    : Integer;
   V, P    : Integer;
   T, I    : Integer;
begin
Json    := TJsonObject.ParseJSONValue(FFases[aFase]) As TJsonObject;
JBlocos := Json.Values['blocos'] As TJsonArray;
TBloco.Clear;
for JValue In JBlocos Do
   Begin
   JBloco := JValue As TJsonArray;
   X := JBloco.Items[0].Value.ToInteger; // X
   Y := JBloco.Items[1].Value.ToInteger; // Y
   V := JBloco.Items[2].Value.ToInteger; // Vidas
   P := JBloco.Items[3].Value.ToInteger; // Pontos
   T := JBloco.Items[4].Value.ToInteger; // Tipo Bloco
   I := JBloco.Items[5].Value.ToInteger; // Tipo Item
   TBloco.CriaBloco(X, Y, V, P, TTipoBloco(t), TTipoItem(I));
   end;
end;

class function TFases.QtdFases: Integer;
begin
Result := FFases.Count;
end;

end.
